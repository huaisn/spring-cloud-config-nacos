server.port = 8080
server.context-path=/

# it will be load, if there are the data-id which can match the name of application in nacos
spring.application.name=spring-cloud-config-nacos
spring.cloud.nacos.config.server-addr=127.0.0.1:8848

# encrypt relate config, you can use the tool at jdk to generate the key store,and set here
encrypt.key-store.location=classpath:keys/server.jks
encrypt.key-store.alias=springcloud-key-store
encrypt.key-store.password=springcloud
encrypt.key-store.secret=springcloud
# length of the key must be 16 chars length
encrypt.key=123456789qwertyu

# here ,has multi extention config, 
# more see to the class NacosConfigProperties, 
# and the class provide other share config,you can know!
spring.cloud.nacos.config.extension-configs[0].data-id=common1.properties
spring.cloud.nacos.config.extension-configs[0].group=COMMON_GROUP
# if refresh = true, when nacos server update and publish properties in the config(eg. data-id),
# the application will be refresh on listener,but it can not reset the value at the relate class,
# so, you can use a annotation RefreshScope on the class need to refresh value,
# but the application will be restart
spring.cloud.nacos.config.extension-configs[0].refresh=true

spring.cloud.nacos.config.extension-configs[1].data-id=common2.properties
spring.cloud.nacos.config.extension-configs[1].group=COMMON_GROUP
spring.cloud.nacos.config.extension-configs[1].refresh=true